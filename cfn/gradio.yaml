AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  GradioSGId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the Controller Security Group
  PrivateSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the Private Subnet
  AmazonLinux2AMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: The Amazon Linux 2 AMI

Resources:
  GradioInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.medium
      SecurityGroupIds:
        - !Ref GradioSGId
      SubnetId: !Ref PrivateSubnetId
      ImageId: !Ref AmazonLinux2AMI
      IamInstanceProfile: !Ref GradioInstanceProfile
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 64
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          amazon-linux-extras install -y docker
          systemctl start docker
          systemctl enable docker
          usermod -a -G docker ec2-user
      Tags:
        - Key: Name
          Value: !Join ['-', ['gradio', !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]]]

  GradioInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ControllerInstanceRole

  ControllerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

Outputs:
  GradioInstanceId:
    Description: The ID of the Gradio Instance
    Value: !Ref GradioInstance

  GradioInstancePrivateDNS:
    Description: The Private DNS of the Gradio Instance
    Value: !GetAtt GradioInstance.PrivateDnsName
