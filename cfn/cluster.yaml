AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC
  PublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the Public Subnet
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the Public Subnet 2
  PrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the Private Subnet
  PrivateSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: The ID of the Private Subnet 2
  FastChatECRRepositoryName:
    Type: String
    Description: ECR Repository name for FastChat
  ControllerALBSGID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the Controller ALB Security Group
  GradioALBSGID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the Gradio ALB Security Group
  ControllerSGID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the Controller Security Group
  GradioSGID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the Gradio Security Group

Resources:
  ### Common ###
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "cluster-${AWS::StackName}"

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "log-group-${AWS::StackName}"
      RetentionInDays: 5

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSTaskExecutionRole-chatbot-arena
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ### Target Group ###
  ControllerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: controller-tg
      Port: 3000
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPCID
      HealthCheckPath: /test_connection

  GradioTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: gradio-tg
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VPCID

  ### Load Balancer ###
  ControllerLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: controller-lb
      Scheme: internal
      Subnets:
        - !Ref PrivateSubnetID
        - !Ref PrivateSubnet2ID
      SecurityGroups:
        - !Ref ControllerALBSGID
      Tags:
        - Key: Name
          Value: !Sub "controller-lb-${AWS::StackName}"

  ControllerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ControllerTargetGroup
      LoadBalancerArn: !Ref ControllerLoadBalancer
      Port: 80
      Protocol: HTTP

  GradioLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: gradio-lb
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSubnetID
        - !Ref PublicSubnet2ID
      SecurityGroups:
        - !Ref GradioALBSGID
      Tags:
        - Key: Name
          Value: !Sub "gradio-lb-${AWS::StackName}"

  GradioListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GradioTargetGroup
      LoadBalancerArn: !Ref GradioLoadBalancer
      Port: 80
      Protocol: HTTP

  ### Task Definition ###
  ControllerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "controller-task-${AWS::StackName}"
      RequiresCompatibilities:
        - FARGATE
      Cpu: 4096 # 4 vCPU
      Memory: 8192 # 8 GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: fastchat-controller
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FastChatECRRepositoryName}:latest"
          Essential: true
          PortMappings:
            - ContainerPort: 3000
          Environment:
            - Name: TZ
              Value: Asia/Tokyo
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: controller
          Command: ["-m", "fastchat.serve.controller", "--host", "0.0.0.0", "--port", "3000"]

  GradioTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "gradio-task-${AWS::StackName}"
      RequiresCompatibilities:
        - FARGATE
      Cpu: 4096 # 4 vCPU
      Memory: 8192 # 8 GB
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: fastchat-gradio
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${FastChatECRRepositoryName}:latest"
          Essential: true
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: TZ
              Value: Asia/Tokyo
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: gradio
          Command: ["-m", "fastchat.serve.gradio_web_server_multi", "--host", "0.0.0.0", "--port", "8080", "--controller-url", !Sub "http://${ControllerLoadBalancer.DNSName}"]

  ### Service ###
  ControllerService:
    Type: AWS::ECS::Service
    DependsOn: ControllerListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      TaskDefinition: !Ref ControllerTaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ControllerSGID
          Subnets:
            - !Ref PrivateSubnetID
      LoadBalancers:
        - ContainerName: fastchat-controller
          ContainerPort: 3000
          TargetGroupArn: !Ref ControllerTargetGroup

  GradioService:
    Type: AWS::ECS::Service
    DependsOn: GradioListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      TaskDefinition: !Ref GradioTaskDefinition
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref GradioSGID
          Subnets:
            - !Ref PrivateSubnetID
      LoadBalancers:
        - ContainerName: fastchat-gradio
          ContainerPort: 8080
          TargetGroupArn: !Ref GradioTargetGroup